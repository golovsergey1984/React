{"version":3,"sources":["components/Profile/UserList.module.css","components/Statisitc/Statistic.module.css","components/Friends/Friends.module.css","components/Transaction/Transaction.module.css","components/Profile/UserList.js","components/Statisitc/Statistic.js","components/Friends/Friends.js","components/Transaction/Transiction.js","components/App.js","index.js"],"names":["module","exports","Profile","avatar","name","tag","location","stats","className","styles","profile","description","src","alt","label","quantity","followers","views","likes","defaultProps","Statistic","title","statistics","statList","map","stat","key","id","item","style","backgroundColor","randomColor","percentage","r","Math","floor","random","g","b","toString","onlineStatusBGcolol","iconClasses","status","push","statusFalse","join","FriendList","friends","friendList","isOnline","width","TransactionHistory","items","transactionHistory","even","type","amount","currency","App","user","statisticalData","transactions","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b0935363.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"UserList_profile__2Qr7j\",\"description\":\"UserList_description__3hCSZ\",\"avatar\":\"UserList_avatar__2Ej7H\",\"name\":\"UserList_name__1oU5r\",\"tag\":\"UserList_tag__1mc64\",\"location\":\"UserList_location__3c8iJ\",\"stats\":\"UserList_stats__10Fib\",\"label\":\"UserList_label__2C8Or\",\"quantity\":\"UserList_quantity__30l0y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Statistic_title__1E2ow\",\"statistics\":\"Statistic_statistics__3JrDT\",\"statList\":\"Statistic_statList__khUYR\",\"item\":\"Statistic_item__2usnY\",\"label\":\"Statistic_label__2e00p\",\"percentage\":\"Statistic_percentage__3Ku8Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"Friends_friendList__2Pa4K\",\"item\":\"Friends_item__3gciZ\",\"status\":\"Friends_status__3LVoF\",\"statusFalse\":\"Friends_statusFalse__2wjE9\",\"avatar\":\"Friends_avatar__2CpAn\",\"name\":\"Friends_name__2W4UV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"Transaction_transactionHistory__2Cm10\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './UserList.module.css';\r\n\r\nconst Profile = ({ avatar, name, tag, location, stats }) => (\r\n  <div className={styles.profile}>\r\n    <div className={styles.description}>\r\n      <img src={avatar} alt=\"user avatar\" className={styles.avatar} />\r\n      <p className={styles.name}>{name}</p>\r\n      <p className={styles.tag}>{tag}</p>\r\n      <p className={styles.location}>{location}</p>\r\n    </div>\r\n    <ul className={styles.stats}>\r\n      <li>\r\n        <span className={styles.label}>Followers</span>\r\n        <span className={styles.quantity}>{stats.followers}</span>\r\n      </li>\r\n      <li>\r\n        <span className={styles.label}>Views</span>\r\n        <span className={styles.quantity}>{stats.views}</span>\r\n      </li>\r\n      <li>\r\n        <span className={styles.label}>Likes</span>\r\n        <span className={styles.quantity}>{stats.likes}</span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nProfile.defaultProps = {\r\n  tag: 'default tag',\r\n};\r\n\r\nProfile.propTypes = {\r\n  avatar: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string,\r\n  location: PropTypes.string.isRequired,\r\n  stats: PropTypes.shape({\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired,\r\n  }),\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Statistic.module.css';\r\n\r\nconst Statistic = ({ title, stats }) => (\r\n  <section className={styles.statistics}>\r\n    {typeof title !== 'undefined' && <h2 className={styles.title}>{title}</h2>}\r\n\r\n    <ul className={styles.statList}>\r\n      {stats.map(stat => (\r\n        <li\r\n          key={stat.id}\r\n          className={styles.item}\r\n          style={{ backgroundColor: randomColor() }}\r\n        >\r\n          <span className={styles.label}>{stat.label}</span>\r\n          <span className={styles.percentage}>{stat.percentage + '%'}</span>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </section>\r\n);\r\n\r\nStatistic.propTypes = {\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      title: PropTypes.string,\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default Statistic;\r\n\r\nfunction randomColor() {\r\n  var r = Math.floor(Math.random() * 256);\r\n  var g = Math.floor(Math.random() * 256);\r\n  var b = Math.floor(Math.random() * 256);\r\n  var bgColor = '#' + r.toString(16) + g.toString(16) + b.toString(16);\r\n\r\n  return bgColor;\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Friends.module.css';\r\n\r\nfunction onlineStatusBGcolol(item) {\r\n  const iconClasses = [styles.status];\r\n\r\n  if (item === false) {\r\n    iconClasses.push(styles.statusFalse);\r\n  }\r\n  return iconClasses.join(' ');\r\n}\r\n\r\nconst FriendList = ({ friends, alt }) => {\r\n  return (\r\n    <ul className={styles.friendList}>\r\n      {friends.map(item => (\r\n        <li key={item.id} className={styles.item}>\r\n          <span className={onlineStatusBGcolol(item.isOnline)}></span>\r\n          <img\r\n            className={styles.avatar}\r\n            src={item.avatar}\r\n            alt={alt}\r\n            width=\"48\"\r\n          />\r\n          <p className={styles.name}>{item.name}</p>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nFriendList.defaultProps = {\r\n  alt: 'User profile photo',\r\n};\r\n\r\nFriendList.propTypes = {\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      alt: PropTypes.string,\r\n      avatar: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      isOnline: PropTypes.bool.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default FriendList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Transaction.module.css';\r\n\r\nconst TransactionHistory = ({ items }) => (\r\n  <table className={styles.transactionHistory}>\r\n    <caption>История транзакций</caption>\r\n    <thead>\r\n      <tr>\r\n        <th>Type</th>\r\n        <th>Amount</th>\r\n        <th>Currency</th>\r\n      </tr>\r\n    </thead>\r\n\r\n    <tbody>\r\n      {items.map(item => (\r\n        <tr key={item.id} className={styles.even}>\r\n          <td>{item.type}</td>\r\n          <td>{item.amount}</td>\r\n          <td>{item.currency}</td>\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      type: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import React, { Fragment } from 'react';\r\nimport Profile from './Profile/UserList';\r\nimport user from './Profile/UserList.json';\r\nimport Statistics from './Statisitc/Statistic.js';\r\nimport statisticalData from './Statisitc/Statistic.json';\r\nimport FriendList from './Friends/Friends.js';\r\nimport friends from './Friends/Friends.json';\r\nimport transactions from './Transaction/Transiction.json';\r\nimport TransactionHistory from './Transaction/Transiction.js';\r\n\r\nconst App = () => (\r\n  <Fragment>\r\n    <h3>TASK #1: Social Profile</h3>\r\n    <Profile\r\n      name={user.name}\r\n      tag={user.tag}\r\n      location={user.location}\r\n      avatar={user.avatar}\r\n      stats={user.stats}\r\n    />\r\n    <h3>TASK #2: Statistics Data</h3>\r\n    <Statistics title=\"Upload stats\" stats={statisticalData} />\r\n    <h3>TASK #3: Friends List</h3>\r\n    <FriendList friends={friends} />\r\n    <h3>TASK #4: Transaction history</h3>\r\n    <TransactionHistory items={transactions} />\r\n  </Fragment>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}